name: "release-tauri-app"
on:
  push: 
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  release-tauri-app:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.13

    runs-on: $\{{ matrix.platform }}
    steps:
      - name: Support longpaths
        if: matrix.platform != 'ubuntu-22.04'
        run: git config --system core.longpaths true

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Checks out a copy of your repository on the ubuntu-latest machine
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: stable

      - name: install x86_64 target
        if: matrix.args == '--target x86_64-apple-darwin'
        run: rustup target add x86_64-apple-darwin

      - name: install Go stable
        uses: actions/setup-go@v4
        with:
          go-version: "stable"

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            javascriptcoregtk-4.1 \
            libsoup-3.0 \
            webkit2gtk-4.1

      - name: Install and prepare
        run: |
          npm install

      - name: build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: $\{{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "{{title_case runtime_name}} v__VERSION__"
          releaseBody: "See assets below to download and install this version."
          releaseDraft: true
          prerelease: true
          args: $\{{ matrix.args }}

  release-tauri-android-app:
    needs: publish-happ
    permissions: write-all

    runs-on: ubuntu-22.04
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Checks out a copy of your repository on the ubuntu-latest machine
      - uses: actions/checkout@v3

      - name: Install nix
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: $\{{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-24.05

      - uses: cachix/cachix-action@v15
        with:
          name: holochain-ci

      - uses: cachix/cachix-action@v15
        with:
          name: darksoil-studio

      - name: setup Android signing
        run: |
          cd src-tauri/gen/android
          echo "keyAlias=$\{{ secrets.ANDROID_KEY_ALIAS }}" > keystore.properties
          echo "password=$\{{ secrets.ANDROID_KEY_PASSWORD }}" >> keystore.properties
          base64 -d <<< "$\{{ secrets.ANDROID_KEY_BASE64 }}" > $RUNNER_TEMP/keystore.jks
          echo "storeFile=$RUNNER_TEMP/keystore.jks" >> keystore.properties

      - name: Install and Build ðŸ”§ 
        run: |
          nix develop --accept-flake-config .#androidDev --command bash -c "pnpm install && pnpm tauri android build"
 
      - uses: AButler/upload-release-assets@v3.0
        with:
          files: "src-tauri/gen/android/app/build/outputs/bundle/**/*.aab"
          repo-token: $\{{ secrets.GITHUB_TOKEN }}
          release-id: $\{{ needs.publish-happ.outputs.releaseId }}
